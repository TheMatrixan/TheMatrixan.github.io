{"version":3,"sources":["layouts/LayoutMain/components/Header/Header.module.scss","routes/Contact/Contact.module.scss","layouts/LayoutMain/components/Footer/Footer.module.scss","routes/Homepage/Homepage.module.scss","components/LanguageSwitcher/LanguageSwitcher.module.scss","components/PageTitle/PageTitle.module.scss","assets/img/mateusz_lesiak.jpg","routes/About/About.module.scss","assets/img/icons.svg","assets/img/mateusz_lesiak@2x.jpg","assets/img/mateusz_lesiak.webp","assets/img/mateusz_lesiak@2x.webp","routes/Portfolio/Portfolio.module.scss","routes/Resume/Resume.module.scss","assets/img/logo.svg","layouts/LayoutMain/LayoutMain.module.scss","languages/index.tsx","languages/pl.language.tsx","languages/en.language.tsx","store/language/types.tsx","store/language/reducer.tsx","config/theme.tsx","hocs/LanguageProvider/LanguageProvider.hoc.tsx","components/LanguageSwitcher/LanguageSwitcher.component.tsx","store/language/actions.tsx","components/Hexagon/Hexagon.component.tsx","components/ButtonLink/ButtonLink.component.tsx","components/Spinner/Spiner.component.tsx","routes/Homepage/Homepage.component.tsx","routes/About/About.component.tsx","components/PageTitle/PageTitle.component.tsx","hooks/usePageTitle.hook.tsx","components/Icon/Icon.component.tsx","routes/Contact/Contact.component.tsx","routes/Portfolio/Portfolio.component.tsx","config/routes.tsx","routes/Resume/Resume.component.tsx","config/navigation.tsx","config/const.tsx","layouts/LayoutMain/components/Header/Header.component.tsx","layouts/LayoutMain/components/Footer/Footer.component.tsx","layouts/LayoutMain/LayoutMain.tsx","hocs/Router/Router.hoc.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Languages","pl","fullname","home","getInTouch","goToGoogleMaps","pageInBuilding","viewLinkedIn","en","LanguageActions","LanguageCodes","Object","keys","map","key","messages","Polish","messagesPL","English","messagesEN","defaultLanguage","Themes","initialState","language","browserLang","window","navigator","split","includes","userLanguage","reducer","state","action","type","CHANGE_LANGUAGE","payload","LanguageContext","createContext","LanguageProvider","children","useReducer","languageReducer","dispatch","useEffect","document","documentElement","lang","Provider","value","locale","defaultLocale","LanguageSwitcher","useContext","formatMessage","useIntl","changeLang","event","preventDefault","changeLanguage","className","styles","cn","title","id","onClick","Hexagon","fill","stroke","strokeWidth","size","xmlns","viewBox","width","height","x","y","d","ButtonLinkVariants","Spinner","ButtonLink","href","loading","variant","Primary","to","Homepage","About","PageTitle","useState","formattedTitle","setFormattedTitle","usePageTitle","Icon","name","xlinkHref","Icons","Contact","srcSet","image2xWebP","imageWebP","image2xJPG","imageJPG","src","alt","Const","Email","target","rel","HomeURI","LinkedInURI","LinkedInName","GithubURI","GithubName","Portfolio","routes","path","component","navigation","enhance","Header","menuToggled","setMenuToggled","toggleMenu","logo","index","style","animationDelay","activeClassName","String","padStart","Footer","stars","setStars","forks","setForks","fetch","then","response","ok","Error","statusText","json","data","stargazers_count","forks_count","catch","LayoutMain","pageLoadTime","Date","now","performance","timing","navigationStart","addClassLoadedTimeout","setTimeout","body","classList","add","getElementById","remove","clearTimeout","fallback","Router","basename","process","render","exact","App","Boolean","location","hostname","match","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60184540.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__1QeqU\",\"hexagons\":\"Header_hexagons__ElRlP\",\"hex-menu\":\"Header_hex-menu__-FANo\",\"hexMenuAnim\":\"Header_hexMenuAnim__PpafV\",\"header\":\"Header_header__2kGCY\",\"navbar\":\"Header_navbar__15sIG\",\"navbar-logo\":\"Header_navbar-logo__1v_3D\",\"navbar-toggle\":\"Header_navbar-toggle__2pwKH\",\"navbar-item\":\"Header_navbar-item__1zRYK\",\"navbar-top\":\"Header_navbar-top__3gTYo\",\"slideInDown\":\"Header_slideInDown__2Z9r4\",\"navbar-menu\":\"Header_navbar-menu__3_GyM\",\"navbar-item-index\":\"Header_navbar-item-index__2HbjJ\",\"enhance\":\"Header_enhance__16Scc\",\"navbar-item-link\":\"Header_navbar-item-link__3Wyxz\",\"active\":\"Header_active__1M6Rr\",\"navbar-item-enhance\":\"Header_navbar-item-enhance__17PxE\",\"mobile\":\"Header_mobile__20hw1\",\"btn-toggle\":\"Header_btn-toggle__3u8Fp\",\"menu\":\"Header_menu__3iVjC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Contact_intro__2svVu\",\"intro-section\":\"Contact_intro-section__GsIOI\",\"slideInDown\":\"Contact_slideInDown__3uZtp\",\"intro-section--image\":\"Contact_intro-section--image__3uN2u\",\"intro-section--details\":\"Contact_intro-section--details__1qQGR\",\"fullname\":\"Contact_fullname__g9lej\",\"hr\":\"Contact_hr___QDIw\",\"link-item\":\"Contact_link-item__2tjZI\",\"btn\":\"Contact_btn__35hcI\",\"hex-wrapper\":\"Contact_hex-wrapper__3Tl_3\",\"hex-white\":\"Contact_hex-white__2kThu\",\"hex-default\":\"Contact_hex-default__3HopT\",\"dash\":\"Contact_dash__3j9yi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1HR1K\",\"opacityAnim\":\"Footer_opacityAnim__5GP4-\",\"row\":\"Footer_row__2TteR\",\"info\":\"Footer_info__NyAsP\",\"link\":\"Footer_link__MZZ6E\",\"icon-num\":\"Footer_icon-num__QSC0l\",\"icon\":\"Footer_icon__1gvGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"Homepage_hero__2JYmo\",\"slideInDown20\":\"Homepage_slideInDown20__2xI6x\",\"introduction\":\"Homepage_introduction__2pwZc\",\"fullname\":\"Homepage_fullname__2CU78\",\"description\":\"Homepage_description__3ePrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switchers\":\"LanguageSwitcher_switchers__DyTZV\",\"btn-lang\":\"LanguageSwitcher_btn-lang__1F2dH\",\"active\":\"LanguageSwitcher_active__2J1bQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"PageTitle_border__2YYna\",\"title\":\"PageTitle_title__1WVfu\",\"wrapper\":\"PageTitle_wrapper__1ETB-\",\"slideInDown\":\"PageTitle_slideInDown__3kVxZ\"};","module.exports = __webpack_public_path__ + \"static/media/mateusz_lesiak.1dd17ba1.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temp\":\"About_temp__2ZxA_\"};","module.exports = __webpack_public_path__ + \"static/media/icons.7348e7f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/mateusz_lesiak@2x.02462150.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mateusz_lesiak.8a205d9d.webp\";","module.exports = __webpack_public_path__ + \"static/media/mateusz_lesiak@2x.5aede141.webp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temp\":\"Portfolio_temp__26Toa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temp\":\"Resume_temp__2GPiF\"};","module.exports = __webpack_public_path__ + \"static/media/logo.abb2a07c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LayoutMain_main__1wmT-\"};","import messagesPL from './pl.language';\r\nimport messagesEN from './en.language';\r\n\r\nenum Languages {\r\n  English = 'en',\r\n  Polish = 'pl',\r\n}\r\n\r\nconst LanguageCodes = Object.keys(Languages).map(key => Languages[key]);\r\n\r\nconst messages = {\r\n  [Languages.Polish]: messagesPL,\r\n  [Languages.English]: messagesEN,\r\n};\r\n\r\nconst defaultLanguage = Languages.Polish;\r\n\r\nconst userLanguage = (): Languages => {\r\n  const browserLang = window.navigator.language.split(/[-_]/)[0];\r\n  if (LanguageCodes.includes(browserLang)) {\r\n    return browserLang as Languages;\r\n  }\r\n  return defaultLanguage;\r\n};\r\n\r\nexport { messages, Languages, userLanguage, defaultLanguage };\r\n","const pl = {\r\n  fullname: 'Mateusz Lesiak',\r\n  home: 'Łódź, Polska',\r\n  getInTouch: 'Bądźmy w kontakcie',\r\n  goToGoogleMaps: 'Przejdź do Map Google',\r\n  'lang.pl': 'Polski',\r\n  'contact.btn': 'Zobacz CV',\r\n  'lang.en': 'Angielski',\r\n  'theme.change': 'Zmień motyw',\r\n  'navigation.aboutMe': 'O mnie',\r\n  'navigation.portfolio': 'Portfolio',\r\n  'navigation.contact': 'Kontakt',\r\n  'navigation.resume': 'Zobacz CV',\r\n  'header.logo': 'Logo strony Mateusz Lesiak',\r\n  'footer.viewRepository': 'Przejdź do repozytorium',\r\n  'footer.designedIn': 'Zaprojektowane w',\r\n  'footer.createdWith': 'Stworzone w',\r\n  'icon.githubStar': 'Ikona gwiazdy dla repozytorium z GitHub',\r\n  'icon.githubFork': 'Ikona rozgałęzienia dla repozytorium z GitHub',\r\n  'icon.adobeXd': 'Adobe XD',\r\n  'icon.reactJs': 'React.Js',\r\n  'button.menu.toggle': 'Rozwiń/Zwiń menu',\r\n  'contact.title': 'Kontakt',\r\n  'homepage.introduction': 'Cześć, jestem',\r\n  'homepage.description':\r\n    'Jestem inżynierem oprogramowania z Łodzi, który specjalizuje się w budowaniu (i czasami projektowaniu) stron oraz aplikacji internetowych wysokiej jakości',\r\n  'homepage.btn': 'Zobacz CV',\r\n  pageInBuilding: 'Strona w budowie',\r\n  viewLinkedIn: 'Zobacz mój LinkedIn',\r\n  'icon.typeScript': 'TypeScript',\r\n};\r\n\r\nexport default pl;\r\n","const en = {\r\n  fullname: 'Mateusz Lesiak',\r\n  home: 'Lodz, Poland',\r\n  getInTouch: 'Get in touch',\r\n  goToGoogleMaps: 'Go to Google Maps',\r\n  'lang.pl': 'Polish',\r\n  'lang.en': 'English',\r\n  'theme.change': 'Change theme',\r\n  'navigation.aboutMe': 'About me',\r\n  'navigation.portfolio': 'Portfolio',\r\n  'navigation.contact': 'Contact',\r\n  'navigation.resume': 'Resume',\r\n  'header.logo': 'Mateusz Lesiak logo',\r\n  'footer.viewRepository': 'Go to the repository',\r\n  'footer.designedIn': 'Designed in',\r\n  'footer.createdWith': 'Built by',\r\n  'icon.githubStar': 'Star icon for the GitHub repository',\r\n  'icon.githubFork': 'Fork icon for the GitHub repository',\r\n  'icon.adobeXd': 'Adobe XD',\r\n  'icon.reactJs': 'React.Js',\r\n  'button.menu.toggle': 'Toggle menu',\r\n  'contact.btn': 'View Resume',\r\n  'contact.title': 'Contact',\r\n  'homepage.introduction': 'Hello, my name is',\r\n  'homepage.description':\r\n    'I am a software engineer from Lodz who specializes in building (and sometimes designing) high-quality websites and applications',\r\n  'homepage.btn': 'View resume',\r\n  pageInBuilding: 'Site under construction',\r\n  viewLinkedIn: 'View my LinkedIn',\r\n  'icon.typeScript': 'TypeScript',\r\n};\r\n\r\nexport default en;\r\n","import { Languages } from 'languages';\r\n\r\nexport enum LanguageActions {\r\n  CHANGE_LANGUAGE = 'CHANGE_LANGUAGE',\r\n}\r\n\r\nexport type Language = Languages;\r\n\r\nexport interface LanguageState {\r\n  language: Language;\r\n}\r\n","import { Reducer } from 'react';\r\n\r\nimport { Action } from 'store/types';\r\nimport { LanguageState, LanguageActions } from './types';\r\nimport { userLanguage } from 'languages';\r\n\r\nconst initialState: LanguageState = {\r\n  language: userLanguage(),\r\n};\r\n\r\nconst reducer: Reducer<LanguageState, Action<LanguageState>> = (state, action) => {\r\n  switch (action.type) {\r\n    case LanguageActions.CHANGE_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        language: action.payload.language,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { reducer as languageReducer, initialState };\r\n","enum Themes {\r\n  Dark = 'dark',\r\n  Light = 'light',\r\n}\r\n\r\nconst ThemeStorageName = 'theme';\r\n\r\nconst getTheme = (): string => {\r\n  let theme = Themes.Dark;\r\n  if (localStorage.getItem(ThemeStorageName)) {\r\n    if (localStorage.getItem(ThemeStorageName) === Themes.Light) {\r\n      theme = Themes.Light;\r\n    }\r\n  } else if (window.matchMedia('(prefers-color-scheme: light)').matches) {\r\n    theme = Themes.Light;\r\n  }\r\n  return theme;\r\n};\r\n\r\nconst setTheme = (theme: string): void => localStorage.setItem(ThemeStorageName, theme);\r\n\r\nexport { Themes, getTheme, setTheme };\r\n","import React, { useReducer, useEffect, createContext, Dispatch } from 'react';\r\nimport { IntlProvider } from 'react-intl';\r\n\r\nimport { messages, defaultLanguage } from 'languages';\r\nimport { languageReducer, initialState } from 'store/language/reducer';\r\nimport { LanguageState } from 'store/language/types';\r\nimport { Action } from 'store/types';\r\n\r\ninterface LanguageContextDefault {\r\n  state: LanguageState;\r\n  dispatch: Dispatch<Action<LanguageState>>;\r\n}\r\n\r\nexport const LanguageContext = createContext({} as LanguageContextDefault);\r\n\r\ninterface LanguageProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst LanguageProvider: React.FC<LanguageProviderProps> = ({ children }: LanguageProviderProps) => {\r\n  const [{ language }, dispatch] = useReducer(languageReducer, initialState);\r\n  useEffect(() => {\r\n    document.documentElement.lang = language;\r\n  }, [language]);\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ state: { language }, dispatch }}>\r\n      <IntlProvider locale={language} messages={messages[language]} defaultLocale={defaultLanguage}>\r\n        {children}\r\n      </IntlProvider>\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageProvider;\r\n","import React, { MouseEvent, useContext } from 'react';\r\nimport { useIntl } from 'react-intl';\r\nimport cn from 'classnames';\r\n\r\nimport { changeLanguage } from 'store/language/actions';\r\nimport { Language } from 'store/language/types';\r\nimport { Languages } from 'languages';\r\nimport { LanguageContext } from 'hocs/LanguageProvider/LanguageProvider.hoc';\r\n\r\nimport styles from './LanguageSwitcher.module.scss';\r\n\r\nconst LanguageSwitcher: React.FC = () => {\r\n  const { state, dispatch } = useContext(LanguageContext);\r\n  const { formatMessage } = useIntl();\r\n  const changeLang = (language: Language) => (event: MouseEvent<HTMLButtonElement>): void => {\r\n    event.preventDefault();\r\n    dispatch(changeLanguage({ language }));\r\n  };\r\n\r\n  return (\r\n    <div className={styles['switchers']}>\r\n      {Object.keys(Languages).map(lang => (\r\n        <button\r\n          className={cn(styles['btn-lang'], { [styles['active']]: state.language === Languages[lang] })}\r\n          key={lang}\r\n          title={formatMessage({ id: `lang.${Languages[lang]}` })}\r\n          onClick={changeLang(Languages[lang])}\r\n        >\r\n          {Languages[lang]}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSwitcher;\r\n","import { LanguageActions, Language, LanguageState } from './types';\r\nimport { Action } from 'store/types';\r\n\r\ntype ChangeLanguageParams = {\r\n  language: Language;\r\n};\r\n\r\nconst changeLanguage = ({ language }: ChangeLanguageParams): Action<LanguageState> => ({\r\n  type: LanguageActions.CHANGE_LANGUAGE,\r\n  payload: {\r\n    language,\r\n  },\r\n});\r\n\r\nexport { changeLanguage };\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\n\r\ninterface HexagonProps {\r\n  className?: string;\r\n  fill?: string;\r\n  stroke?: string;\r\n  strokeWidth?: number;\r\n  size?: number;\r\n}\r\n\r\nconst Hexagon: React.FC<HexagonProps> = ({\r\n  className = '',\r\n  fill = 'none',\r\n  stroke = 'none',\r\n  strokeWidth,\r\n  size,\r\n}: HexagonProps) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 138 122\"\r\n      className={cn('hex', className)}\r\n      fill={`var(--${fill})`}\r\n      stroke={`var(--${stroke})`}\r\n      {...(size && { width: size })}\r\n      {...(size && { height: size })}\r\n      {...(strokeWidth && { strokeWidth })}\r\n    >\r\n      <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"none\" stroke=\"none\" />\r\n      <path\r\n        id=\"hexagon_full\"\r\n        d=\"m92.048739,10.833305l27.071812,46.656868l-27.071812,46.656868l-54.143624,0l-27.071812,-46.656868l27.071812,-46.656868l54.143624,0z\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Hexagon;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport cn from 'classnames';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport Spinner from 'components/Spinner';\r\n\r\nimport styles from './ButtonLink.module.scss';\r\n\r\nexport enum ButtonLinkVariants {\r\n  Primary = 'btn-primary',\r\n}\r\n\r\ninterface ButtonLinkProps {\r\n  href: string;\r\n  title: string;\r\n  loading?: boolean;\r\n  className?: string;\r\n  variant?: ButtonLinkVariants;\r\n}\r\n\r\nconst ButtonLink: React.FC<ButtonLinkProps> = ({\r\n  title,\r\n  href,\r\n  className = '',\r\n  loading = false,\r\n  variant = ButtonLinkVariants.Primary,\r\n}: ButtonLinkProps) => {\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <Link to={href} className={cn(styles[variant], variant, className, 'btn')} title={formatMessage({ id: title })}>\r\n      {variant === ButtonLinkVariants.Primary && (\r\n        <>\r\n          <span className=\"btn-primary-hex btn-primary-hex--top-right\"></span>\r\n          <span className=\"btn-primary-hex btn-primary-hex--bottom-right\"></span>\r\n          <span className=\"btn-primary-hex btn-primary-hex--top-left\"></span>\r\n          <span className=\"btn-primary-hex btn-primary-hex--bottom-left\"></span>\r\n        </>\r\n      )}\r\n      {loading ? <Spinner /> : formatMessage({ id: title })}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ButtonLink;\r\n","import React from 'react';\r\n\r\nconst Spinner: React.FC = () => {\r\n  return <span>spinner</span>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport ButtonLink from 'components/ButtonLink';\r\n\r\nimport styles from './Homepage.module.scss';\r\n\r\nconst Homepage: React.FC = () => {\r\n  return (\r\n    <section>\r\n      <div className=\"container\">\r\n        <div className={styles['hero']}>\r\n          <span className={styles['introduction']}>\r\n            <FormattedMessage id=\"homepage.introduction\" />\r\n          </span>\r\n          <h1 className={styles['fullname']}>\r\n            <FormattedMessage id=\"fullname\" />\r\n          </h1>\r\n          <span className={styles['description']}>\r\n            <FormattedMessage id=\"homepage.description\" />\r\n          </span>\r\n          <ButtonLink href=\"/resume\" title=\"homepage.btn\" className={styles['btn']} />\r\n        </div>\r\n        <div className=\"hexagons hero-hexagons\"></div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport styles from './About.module.scss';\r\n\r\nconst About: React.FC = () => {\r\n  return (\r\n    <div className={styles['temp']}>\r\n      <h1>Mateusz Lesiak</h1>\r\n      <h2>\r\n        <FormattedMessage id=\"pageInBuilding\" />\r\n      </h2>\r\n      <a className=\"btn\" href=\"https://www.linkedin.com/in/mateusz-lesiak-tul/\">\r\n        <FormattedMessage id=\"viewLinkedIn\" />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport usePageTitle from 'hooks/usePageTitle.hook';\r\n\r\nimport styles from './PageTitle.module.scss';\r\n\r\ninterface PageTitleProps {\r\n  title: string;\r\n}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ title }: PageTitleProps) => {\r\n  const [formattedTitle] = usePageTitle(title);\r\n  return (\r\n    <div className={styles['wrapper']}>\r\n      <h1 className={styles['title']}>{formattedTitle}</h1>\r\n      <span className={styles['border']} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import { useEffect, useState } from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nexport default (title: string): [string] => {\r\n  const [formattedTitle, setFormattedTitle] = useState<string>(title);\r\n  const { formatMessage } = useIntl();\r\n\r\n  useEffect(() => {\r\n    setFormattedTitle(formatMessage({ id: title }));\r\n  }, [title, formatMessage]);\r\n\r\n  useEffect(() => {\r\n    document.title = `${formattedTitle} - Mateusz Lesiak`;\r\n    return (): void => {\r\n      document.title = 'Mateusz Lesiak';\r\n    };\r\n  }, [formattedTitle]);\r\n\r\n  return [formattedTitle];\r\n};\r\n","import React from 'react';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport Icons from 'assets/img/icons.svg';\r\n\r\ninterface IconProps {\r\n  name: string;\r\n  title?: string;\r\n  fill?: string;\r\n  stroke?: string;\r\n  size?: number;\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = ({ name, fill = 'none', stroke = 'none', size = 24, title = '' }: IconProps) => {\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <span className={`icon icon-${name}`} title={title && formatMessage({ id: title })}>\r\n      <svg fill={`var(--${fill})`} stroke={`var(--${stroke})`} width={size} height={size}>\r\n        <use xlinkHref={`${Icons}#icon-${name}`} />\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport cn from 'classnames';\r\n\r\nimport PageTitle from 'components/PageTitle';\r\nimport Icon from 'components/Icon';\r\nimport ButtonLink from 'components/ButtonLink';\r\nimport Hexagon from 'components/Hexagon';\r\nimport { Const } from 'config';\r\n\r\nimport styles from './Contact.module.scss';\r\n\r\nimport imageJPG from 'assets/img/mateusz_lesiak.jpg';\r\nimport image2xJPG from 'assets/img/mateusz_lesiak@2x.jpg';\r\nimport imageWebP from 'assets/img/mateusz_lesiak.webp';\r\nimport image2xWebP from 'assets/img/mateusz_lesiak@2x.webp';\r\n\r\nconst Contact: React.FC = () => {\r\n  const { formatMessage } = useIntl();\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <PageTitle title=\"contact.title\" />\r\n        <div className={styles['intro']}>\r\n          <div className={cn(styles['intro-section'], styles['intro-section--image'])}>\r\n            <picture>\r\n              <source srcSet={`${image2xWebP} 2x, ${imageWebP} 1x`} type=\"image/webp\" />\r\n              <source srcSet={`${image2xJPG} 2x, ${imageJPG} 1x`} type=\"image/jpeg\" />\r\n              <img src={imageJPG} alt={formatMessage({ id: 'fullname' })} height=\"500\" width=\"462\" />\r\n            </picture>\r\n          </div>\r\n          <div className={cn(styles['intro-section'], styles['intro-section--details'])}>\r\n            <h2 className={styles['fullname']}>\r\n              <FormattedMessage id=\"fullname\" />\r\n            </h2>\r\n            <a\r\n              href={`mailto:${Const.Email}`}\r\n              className={styles['link-item']}\r\n              title={formatMessage({ id: 'getInTouch' })}\r\n            >\r\n              <Icon name=\"mail\" stroke=\"primary\" />\r\n              <span>{Const.Email}</span>\r\n            </a>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={Const.HomeURI}\r\n              className={styles['link-item']}\r\n              title={formatMessage({ id: 'goToGoogleMaps' })}\r\n            >\r\n              <Icon name=\"home\" stroke=\"primary\" />\r\n              <FormattedMessage id=\"home\" />\r\n            </a>\r\n            <div className={styles['hr']}></div>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={Const.LinkedInURI}\r\n              className={styles['link-item']}\r\n              title={Const.LinkedInName}\r\n            >\r\n              <Icon name=\"linkedIn\" stroke=\"primary\" />\r\n              <span>LinkedIn</span>\r\n            </a>\r\n            <a\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              href={Const.GithubURI}\r\n              className={styles['link-item']}\r\n              title={Const.GithubName}\r\n            >\r\n              <Icon name=\"github\" stroke=\"primary\" />\r\n              <span>Github</span>\r\n            </a>\r\n            <ButtonLink href=\"/resume\" title=\"contact.btn\" className={styles['btn']} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"hexagons\">\r\n        <div className={styles['hex-wrapper']}>\r\n          <Hexagon className={styles['hex-default']} />\r\n          <Hexagon className={styles['hex-white']} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport styles from './Portfolio.module.scss';\r\n\r\nconst Portfolio: React.FC = () => {\r\n  return (\r\n    <div className={styles['temp']}>\r\n      <h1>Mateusz Lesiak</h1>\r\n      <h2>\r\n        <FormattedMessage id=\"pageInBuilding\" />\r\n      </h2>\r\n      <a className=\"btn\" href=\"https://www.linkedin.com/in/mateusz-lesiak-tul/\">\r\n        <FormattedMessage id=\"viewLinkedIn\" />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\r\n\r\nimport Homepage from 'routes/Homepage';\r\n// const About = React.lazy(() => import('routes/About'));\r\n// const Contact = React.lazy(() => import('routes/Contact'));\r\n// const Resume = React.lazy(() => import('routes/Resume'));\r\n// const Portfolio = React.lazy(() => import('routes/Portfolio'));\r\nimport About from 'routes/About';\r\nimport Contact from 'routes/Contact';\r\nimport Portfolio from 'routes/Portfolio';\r\nimport Resume from 'routes/Resume';\r\n\r\ninterface PathRoute {\r\n  path: string;\r\n  component: React.FC;\r\n}\r\n\r\nconst routes: PathRoute[] = [\r\n  { path: '/', component: Homepage },\r\n  { path: '/about', component: About },\r\n  { path: '/contact', component: Contact },\r\n  { path: '/resume', component: Resume },\r\n  { path: '/portfolio', component: Portfolio },\r\n];\r\n\r\nexport { routes };\r\n","import React from 'react';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport styles from './Resume.module.scss';\r\n\r\nconst Resume: React.FC = () => {\r\n  return (\r\n    <div className={styles['temp']}>\r\n      <h1>Mateusz Lesiak</h1>\r\n      <h2>\r\n        <FormattedMessage id=\"pageInBuilding\" />\r\n      </h2>\r\n      <a className=\"btn\" href=\"https://www.linkedin.com/in/mateusz-lesiak-tul/\">\r\n        <FormattedMessage id=\"viewLinkedIn\" />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","interface NavigationItems {\r\n  path: string;\r\n  name: string;\r\n  enhance?: boolean;\r\n}\r\n\r\nconst navigation: NavigationItems[] = [\r\n  { path: '/about', name: 'navigation.aboutMe' },\r\n  { path: '/portfolio', name: 'navigation.portfolio' },\r\n  { path: '/contact', name: 'navigation.contact' },\r\n  { path: '/resume', name: 'navigation.resume', enhance: true },\r\n];\r\n\r\nexport { navigation };\r\n","const Const = {\r\n  GithubURI: 'https://github.com/TheMatrixan',\r\n  GithubName: 'TheMatrixan',\r\n  LinkedInURI: 'https://www.linkedin.com/in/mateusz-lesiak-tul/',\r\n  LinkedInName: 'mateusz-lesiak-tul',\r\n  HomeURI: 'https://goo.gl/maps/VyDDt1jbJPro2cpQ7',\r\n  Email: 'mateusz.lesiak@wp.pl',\r\n};\r\n\r\nexport { Const };\r\n","import React, { useState } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport cn from 'classnames';\r\n\r\nimport LanguageSwitcher from 'components/LanguageSwitcher';\r\n// import ThemeSwitcher from 'components/ThemeSwitcher';\r\nimport Hexagon from 'components/Hexagon';\r\n\r\nimport { navigation } from 'config';\r\nimport logo from 'assets/img/logo.svg';\r\n\r\nimport styles from './Header.module.scss';\r\n\r\nconst Header: React.FC = () => {\r\n  const { formatMessage } = useIntl();\r\n  const [menuToggled, setMenuToggled] = useState<boolean>(false);\r\n  const toggleMenu = (): void => {\r\n    setMenuToggled(!menuToggled);\r\n  };\r\n  return (\r\n    <>\r\n      <header className={cn(styles['header'])}>\r\n        <div className=\"container\">\r\n          <div className={styles['navbar']}>\r\n            <div className={styles['navbar-logo']}>\r\n              <Link to=\"/\" title=\"Mateusz Lesiak\">\r\n                <img className={styles['logo']} src={logo} alt={formatMessage({ id: 'header.logo' })} />\r\n              </Link>\r\n            </div>\r\n            <div className={cn(styles['navbar-top'], { [styles['mobile']]: menuToggled })}>\r\n              <LanguageSwitcher />\r\n              {/* TODO: Add Theme\r\n               <ThemeSwitcher /> */}\r\n            </div>\r\n            <ul className={cn(styles['navbar-menu'], { [styles['mobile']]: menuToggled })}>\r\n              {navigation.map(({ path, name, enhance = false }, index) => (\r\n                <li\r\n                  key={path}\r\n                  className={styles['navbar-item']}\r\n                  style={{ animationDelay: `${index * 100 + 700}ms` }}\r\n                  onClick={toggleMenu}\r\n                >\r\n                  <NavLink to={path} className={styles['navbar-item-link']} activeClassName={styles['active']}>\r\n                    <FormattedMessage id={name} />\r\n                  </NavLink>\r\n                  {enhance ? <span className={styles['navbar-item-enhance']}></span> : null}\r\n                  <span className={cn(styles['navbar-item-index'], { [styles['enhance']]: enhance })}>\r\n                    {String(index + 1).padStart(2, '0')}.\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className={cn(styles['navbar-toggle'], { [styles['mobile']]: menuToggled })}>\r\n              <button type=\"button\" onClick={toggleMenu} className={styles['btn-toggle']}>\r\n                <span className=\"sr-only\">\r\n                  <FormattedMessage id=\"button.menu.toggle\" />\r\n                </span>\r\n                <span className={cn(styles['menu'], { [styles['mobile']]: menuToggled })}></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"hexagons\">\r\n        <div className=\"container relative\">\r\n          <Hexagon className={styles['hex-menu']} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\nimport Icon from 'components/Icon';\r\n\r\nimport styles from './Footer.module.scss';\r\n\r\nconst Footer: React.FC = () => {\r\n  const { formatMessage } = useIntl();\r\n  const [stars, setStars] = useState<number | string>(0);\r\n  const [forks, setForks] = useState<number | string>(0);\r\n\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      return;\r\n    }\r\n    fetch('https://api.github.com/repos/TheMatrixan/TheMatrixan.github.io')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setStars(data.stargazers_count);\r\n        setForks(data.forks_count);\r\n      })\r\n      .catch(() => {\r\n        setStars('?');\r\n        setForks('?');\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <footer className={styles['footer']}>\r\n      <div className=\"container\">\r\n        <div className={styles['row']}>\r\n          <span className={styles['info']}>\r\n            <span className={styles['icon-num']}>\r\n              <FormattedMessage id=\"footer.designedIn\" />\r\n              &nbsp;\r\n              <Icon size={20} name=\"adobeXd\" fill=\"icon-adobeXd\" title=\"icon.adobeXd\" />\r\n            </span>\r\n            <br />\r\n            <span className={styles['icon-num']}>\r\n              <FormattedMessage id=\"footer.createdWith\" />\r\n              &nbsp;\r\n              <Icon size={20} name=\"react\" fill=\"icon-react\" title=\"icon.reactJs\" />\r\n              &nbsp;\r\n              <Icon size={20} name=\"typescript\" fill=\"icon-typescript\" title=\"icon.typeScript\" />\r\n            </span>\r\n          </span>\r\n          <a\r\n            href=\"https://github.com/TheMatrixan/TheMatrixan.github.io\"\r\n            className={styles['link']}\r\n            title={formatMessage({ id: 'footer.viewRepository' })}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <span className={styles['icon-num']}>\r\n              <Icon name=\"github-star\" fill=\"primary\" title=\"icon.githubStar\" />\r\n              &nbsp;{stars}\r\n            </span>\r\n            <span className={styles['icon-num']}>\r\n              <Icon name=\"github-fork\" fill=\"primary\" title=\"icon.githubFork\" />\r\n              &nbsp;{forks}\r\n            </span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, Suspense } from 'react';\r\n\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport styles from './LayoutMain.module.scss';\r\n\r\ninterface LayoutMainProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children }: LayoutMainProps) => {\r\n  useEffect(() => {\r\n    // const isInStandaloneMode =\r\n    //   window.matchMedia('(display-mode: standalone)').matches ||\r\n    //   window.navigator['standalone'] ||\r\n    //   document.referrer.includes('android-app://');\r\n\r\n    const pageLoadTime = Date.now() - window.performance.timing.navigationStart;\r\n    const loaderTimeout = pageLoadTime > 1500 ? pageLoadTime - 1500 : 1500;\r\n    const pageTimeout = 1100;\r\n    const addClassLoadedTimeout = setTimeout(() => {\r\n      document.body.classList.add('loader-loaded');\r\n      setTimeout(() => {\r\n        document.body.classList.add('page-loaded');\r\n        document.getElementById('loader')?.remove();\r\n      }, pageTimeout);\r\n    }, loaderTimeout);\r\n\r\n    return (): void => {\r\n      clearTimeout(addClassLoadedTimeout);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Suspense fallback=\"TODO: Loading...\">\r\n        <main className={styles['main']}>{children}</main>\r\n      </Suspense>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LayoutMain;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport LayoutMain from 'layouts/LayoutMain';\r\nimport { routes } from 'config';\r\n\r\nconst Router: React.FC = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Route\r\n        path=\"/\"\r\n        render={(): object => (\r\n          <LayoutMain>\r\n            <Switch>\r\n              {routes.map(({ path, component }) => (\r\n                <Route component={component} path={path} key={path} exact />\r\n              ))}\r\n            </Switch>\r\n          </LayoutMain>\r\n        )}\r\n      />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from 'react';\n\nimport LanguageProvider from './hocs/LanguageProvider';\nimport Router from './hocs/Router';\n\nimport './assets/styles/styles.scss';\n\n// TODO: Delete.\nif (process.env.NODE_ENV !== 'production') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render/dist/no-classes-transpile/umd/whyDidYouRender.min.js');\n  whyDidYouRender(React);\n}\n\nconst App: React.FC = () => {\n  return (\n    <LanguageProvider>\n      <Router />\n    </LanguageProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// TODO: PWA: Change to register before deploy.\nserviceWorker.unregister();\n"],"sourceRoot":""}